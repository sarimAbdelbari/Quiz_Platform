generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String?
  password      String
  role          Role         @default(USER)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  quizAttempts  QuizAttempt[]
  achievements  Achievement[]
  createdQuizzes Quiz[]

  @@index([email])
}

model Quiz {
  id          String        @id @default(cuid())
  title       String
  description String
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  String
  difficulty  Difficulty
  timeLimit   Int?
  createdBy   User         @relation(fields: [userId], references: [id])
  userId      String
  questions   Question[]
  attempts    QuizAttempt[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([categoryId])
  @@index([userId])
}

model Question {
  id            String        @id @default(cuid())
  quiz          Quiz          @relation(fields: [quizId], references: [id])
  quizId        String
  type          QuestionType
  content       String
  options       Json?         // Using PostgreSQL native JSON type
  correctAnswer String
  order         Int
  points        Int          @default(1)

  @@index([quizId])
}

model QuizAttempt {
  id          String        @id @default(cuid())
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  quiz        Quiz          @relation(fields: [quizId], references: [id])
  quizId      String
  score       Int
  startedAt   DateTime      @default(now())
  completedAt DateTime?
  answers     Answer[]

  @@index([userId])
  @@index([quizId])
}

model Answer {
  id            String        @id @default(cuid())
  attempt       QuizAttempt   @relation(fields: [attemptId], references: [id])
  attemptId     String
  questionId    String
  userAnswer    String
  isCorrect     Boolean
  answeredAt    DateTime      @default(now())

  @@index([attemptId])
}

model Category {
  id          String        @id @default(cuid())
  name        String        @unique
  quizzes     Quiz[]

  @@index([name])
}

model Achievement {
  id          String        @id @default(cuid())
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  type        String
  unlockedAt  DateTime      @default(now())

  @@index([userId])
}

enum Role {
  USER
  ADMIN
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum QuestionType {
  MULTIPLE_CHOICE
  TRUE_FALSE
  SHORT_ANSWER
}